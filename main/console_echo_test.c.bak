#include <inttypes.h>
#include "nvs_flash.h"
#include "freertos/FreeRTOS.h"
#include "freertos/task.h"
#include "esp_log.h"
#include "esp_wifi.h"
#include "esp_phy_cert_test.h"
#include <string.h>
#include "esp_vfs_dev.h"
#include "hal/usb_serial_jtag_ll.h"
#include <fcntl.h>
#include "driver/uart.h"

static const char *TAG = "console_echo";

// Function to read a single character from the USB Serial JTAG RX buffer
int usb_serial_jtag_read_char(void) {
    uint8_t char_buf;
    // Check if data is available in the RX buffer
    if (usb_serial_jtag_ll_rxfifo_data_available()) {
        // Read a single character from the RX buffer
        if (usb_serial_jtag_ll_read_rxfifo(&char_buf, 1) > 0) {
            return char_buf;  // Return the character
        }
    }
    return -1; // Return -1 if no character is available
}

void mytask1(void *pvParameter)
{
    while (1)
    {
        int ch = usb_serial_jtag_read_char();
        if (ch != -1) { // If a character is available
            ESP_LOGI(TAG, "Received char: %c", ch);
        }
        vTaskDelay(pdMS_TO_TICKS(10)); // Small delay to prevent busy looping
    }
}

void app_main(void)
{
    esp_log_level_set("*", ESP_LOG_VERBOSE);

    ESP_LOGI(TAG, "App started!");
    xTaskCreate(mytask1, "mytask1", 1024 * 5, NULL, 1, NULL);
}
